plugins {
    id 'java'
    id "org.flywaydb.flyway" version "9.22.1"
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

ext {
    set('jjwtVersion', "0.11.5")
    set('snakeyamlVersion', "2.2")
    set('lombokVersion', "1.18.30")
    set('springBootVersion', "3.1.4")
    set('springCloudVersion', "2022.0.4")
    set('mapstructVersion', "1.5.5.Final")
}

repositories {
    mavenLocal()
    mavenCentral()
}


java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

buildDir = 'target'

configurations {
    compileOnly.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom annotationProcessor
    testAnnotationProcessor.extendsFrom annotationProcessor
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation 'de.siegmar:logback-gelf:4.0.2'

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:postgresql:1.19.0'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test:6.0.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
